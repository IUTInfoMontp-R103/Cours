extends coursXX.pug

append preamble
    - date = "2023-11-06";
    - title = "Cours n°2 :<br>Représentation des nombres";

append header
  script(src="https://polyfill.io/v3/polyfill.min.js?features=es6")
  script(id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js")

block document
  .section-counter
  section.section
    h1 Notation positionnelle
  section
    h1 Écriture décimale
    .side.center
      img(style={width: "60%"} src="cours02/chiffres.png")
      br
      img(src="cours02/leonie.png")
      .footnote Image : Les maths avec Léonie (CE1)
    .side
      p Représentation «&nbsp;usuelle&nbsp;» des nombres
      br
      ul
        li 10 chiffres ("0", "1", ..., "9")
        li valeur d'un chiffre dépend de sa position (unités, dizaines, centaines, etc.)
        li permet de représenter tous les entiers
        li écriture unique (si on enlève les 0 initiaux)

  section
    h1 Écriture en base quelconque
    .side
      .only(data-step=0)
        p Ex. en base 5 :
        ul
          li chiffres : 01234
          li \(324_5\) &rarr;
            br
            | \(3\times 5^2 + 2\times 5 + 4\times 1\)
      .only
        p Ex. en base 2 (binaire):
        ul
          li chiffres : 01
          li \(1011_2\) &rarr;
            br
            | \(1\times 2^3 + 0\times 2^2 + 1\times 2 + 1\times 1\)
      .only
        p Ex. en base 16 (hexadécimal) :
        ul
          li chiffres : 0123456789ABCDEF
          li \(3FB_{16}\) &rarr;
            br
            | \(3\times 16^2 + 15\times 16 + 11\times 1\)
    .side
      p 10 n'est pas particulier, on peut choisir une autre base \(b > 1\)
      br
      ul
        li \(b\) chiffres
        li chaque position vaut \(b\) fois plus que celle de droite
        li \(c_nc_{n-1}\ldots c_1c_0 = \sum\limits^n_{k=0} c_kb^k\)

  section
    h1 Incrémentation
    .side
      .only(data-start=0 data-end=5)
        p En base 3 :
        ul
          li 0
          li 1
          li 2
          .uncover
            li 10
            li 11
            li 12
            li 20
          .uncover
            li ...
            li 1012221
          li.uncover 1012222
          li.uncover 1020000
          .uncover
            li 1020001
            li ...
      .only(data-start="+1")
        p En base 2 :
        ul
          li 0
          li 1
          li 10
          li 11
          li 100
          li 101
          li 110
          li 111
          li 1000
          li 1001
          li 1010
          li 1011
          li ...

    .side
      p Pour incrémenter (ajouter 1)
      ul
        li remplacer tous les chiffres \((b-1)\) de la fin par des 0
        li incrémenter le chiffre le plus à droite \(\neq (b-1)\)
      br
      p.uncover Avec \(k\) chiffres on peut compter jusqu'à \((b^k-1)\)

  section
    h1 Conversions (1)
    .side
      .only(data-step=0)
        p \(432_5\) &rarr; \(4\times 5^2 + 3\times 5 + 2\times 1\)
      .only(data-start=1)
        p $$\begin{aligned}
          | 222 &= 1 \times 125 + 97\\
          | &= 1 \times 125 + 3 \times 25 + 22\\
          | &= 1 \times 125 + 3 \times 25 + 4\times 5 + 2\\
          | \end{aligned}$$
        p.uncover \(&rarr; 1342_5\)
    .side
      .uncover(data-start=1)
        p Observation :
        ul
          li Unicité de la décomposition $$x = \sum\limits^n_{k=0} c_kb^k$$
        br
      div(style={height: "10.5em"})
        .only(data-step=0)
          p Décodage (base \(b\) &rarr; base 10):
          ul
            li Multiplier chaque chiffre par la puissance de \(b\) correspondante
            li Ajouter
        .only(data-start=1)
          p Encodage (base 10 &rarr; base \(b\)):
          ul
            li Insertion de la plus grande puissance de \(b\) ≤ \(x\)
            li On cherche combien de fois on peut mettre cette puissance
          p Attention : si une puissance n'apparaît pas il faut ajouter un 0

  section
    h1 Conversions (2)
    .side
      img.only(data-step=0 style={width: "80%"} src="cours02/ajout_zero.png")
      .only
        img(src="cours02/divisions.png")
        p &rarr; \(22_{10} = 10110_2\)
      .only(data-start="+1")
        .center
          tt.only(data-step="+0") 100110
          tt.only <u>1</u>00110
          tt.only 1<u>0</u>0110
          tt.only 10<u>0</u>110
          tt.only 100<u>1</u>10
          tt.only 1001<u>1</u>0
          tt.only 10011<u>0</u>
        br
        p.only(data-step=2) \(t = 0\)
        p.only \(t = 1\)&nbsp;&nbsp;&nbsp; (\(\times 2 + 1\))
        p.only \(t = 2\)&nbsp;&nbsp;&nbsp; (\(\times 2\))
        p.only \(t = 4\)&nbsp;&nbsp;&nbsp; (\(\times 2\))
        p.only \(t = 9\)&nbsp;&nbsp;&nbsp; (\(\times 2 + 1\))
        p.only \(t = 19\)&nbsp;&nbsp;&nbsp; (\(\times 2 + 1\))
        p.only \(t = 38\)&nbsp;&nbsp;&nbsp; (\(\times 2\))
    .side
      p Observations :
      ul
        li Ajouter un zéro ↔ multiplier par \(b\)
        li Ajouter chiffre \(c\) ↔ \(\times b + c\)
      br
      div(style={height: "6em"})
        .only(data-step=1)
          p Encodage (base 10 &rarr; base \(b\)):
          ul
            li Chiffre des unités est \(x\mod b\)
            li On divise par \(b\) pour trouver les autres chiffres
        .only(data-start="+1")
          p Décodage (base \(b\) &rarr; base 10):
          ul
            li \(t &larr; 0\)
            li Pour chaque chiffre \(c\) (depuis la gauche) $$t&larr; bt + c$$

  .section-counter
  section.section
    h1 Arithmétique

  section
    h1 Addition
    .side
      p Ex. en base 5
      .center
        .image-container(style={width: "60%"})
          img(src="cours02/addition-1.png")
          img.uncover(src="cours02/addition-2.png")
          img.uncover(src="cours02/addition-3.png")
          img.uncover(src="cours02/addition-4.png")
          img.uncover(src="cours02/addition-5.png")
    .side
      p Pour additionner des nombres en base \(b\)
      ul
        li Aligner les chiffres à droite (unités)
        li Ajouter les chiffres depuis la droite
        li En cas de dépassement, on transfère \(d\) sur la colonne de gauche (retenue)

  section
    h1 Soustraction
    .side
      p Ex. en base 4
      .center
        .image-container(style={width: "60%"})
          img(src="cours02/soustraction-1.png")
          img.uncover(src="cours02/soustraction-2.png")
          img.uncover(src="cours02/soustraction-3.png")
          img.uncover(src="cours02/soustraction-4.png")
          img.uncover(src="cours02/soustraction-5.png")
          img.uncover(src="cours02/soustraction-6.png")
    .side
      p Pour soustraire des nombres en base \(b\)
      ul
        li Aligner les chiffres à droite (unités)
        li Soustraire les chiffres depuis la droite
        li En cas de dépassement, on transfère \(d\) depuis la colonne de gauche (retenue)

  section
    h1 Multiplication
    .side
      .only(data-start="+0" data-end="5")
        p Ex. en base 4
        .center
          .image-container(style={width: "60%"})
            img(src="cours02/multiplication-1.png")
            img.uncover(src="cours02/multiplication-2.png")
            img.uncover(src="cours02/multiplication-3.png")
            img.uncover(src="cours02/multiplication-4.png")
            img.uncover(src="cours02/multiplication-5.png")
            img.uncover(src="cours02/multiplication-6.png")
      .only(data-start="+1")
        p Ex. en base 2
        .center
          .image-container(style={width: "60%"})
            img(src="cours02/multiplication-bin-1.png")
            img.uncover(src="cours02/multiplication-bin-2.png")
            img.uncover(src="cours02/multiplication-bin-3.png")
    .side
      p Pour multiplier des nombres en base \(b\)
      ul
        li Aligner les chiffres à droite (unités)
        li Multiplier un des nombres par les chiffres du second (avec décalage)
        li Ajouter les résultats

  section
    h1 Nombres à virgule
    .side
      img.only(data-step=0 src="cours02/virgule.png")
      img.only(src="cours02/virgule-decode.png")

    .side
      .only(data-step=0)
        p Pour représenter des nombres non-entiers
        ul
          li On ajoute des chiffres de poids $$\frac{1}{b}, \frac{1}{b^2}, \frac{1}{b^3}, \ldots$$
          li Pour reconnaître la position des unités on ajoute une virgule
      .only
        p Pour représenter un nombre non entier en base \(b\) :
        ul
          li On représente la partie entière
          li Pour la partie fractionnaire (\(0≤f<1\))
            ul
              li On multiplie par \(2\)
              li Si \(≥ 1\) &rarr; \(1\), sinon \(0\)
              li On ignore la partie entière
              li Si une valeur se répète l'écriture est périodique

  section
    h1 Nombres à virgules
    p Quelques propriétés :
    ul
      li Avec des développements infinis, on peut représenter tous les nombres réels (certains réels ont deux représentations)
      li.uncover Les nombres rationnels sont exactement ceux qui ont une représentation ultimement périodique
      li.uncover Un nombre qui a une écriture finie en base \(b_1\) n'a pas nécessairement une écriture finie en base \(b_2\) (p. ex. : \(0,1_3 = 0,3333\ldots_{10}\))
      li.uncover Si \(p \wedge q = 1\), \(\frac{p}{q}\) a une écriture finie en base \(b\) si et seulement si tous les facteurs premiers de \(q\) sont des diviseurs de \(b\)